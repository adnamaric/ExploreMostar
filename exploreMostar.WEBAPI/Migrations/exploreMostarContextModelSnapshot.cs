// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using exploreMostar.WebAPI.Database;

namespace exploreMostar.WebAPI.Migrations
{
    [DbContext(typeof(exploreMostarContext))]
    partial class exploreMostarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Apartmani", b =>
                {
                    b.Property<int>("ApartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ApartmanID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AparatZaKafu");

                    b.Property<bool?>("Bazen");

                    b.Property<int?>("GodinaIzgradnje");

                    b.Property<string>("KategorijaApartmana")
                        .HasMaxLength(1);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<bool?>("Klima");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<bool?>("Parking");

                    b.Property<bool?>("Perilica");

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool?>("Tv")
                        .HasColumnName("TV");

                    b.Property<double?>("Udaljenost");

                    b.Property<bool?>("Wifi");

                    b.HasKey("ApartmanId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Apartmani");

                    b.HasData(
                        new { ApartmanId = 1, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 2000, KategorijaApartmana = "D", KategorijaId = 4, Klima = true, Latitude = 43.3537666, Lokacija = "Maršala Tita 33a, Mostar 88000", Longitude = 17.8125038, Naziv = "Apartment Dalia", Ocjena = 2.5, Parking = false, Perilica = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { ApartmanId = 2, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 1999, KategorijaApartmana = "A", KategorijaId = 4, Klima = true, Latitude = 43.3456693, Lokacija = "Braće Trbonja 6, Mostar 88000", Longitude = 17.8131764, Naziv = "Apartman Solis", Ocjena = 4.3, Parking = true, Perilica = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { ApartmanId = 3, AparatZaKafu = true, Bazen = true, GodinaIzgradnje = 2001, KategorijaApartmana = "C", KategorijaId = 4, Klima = false, Latitude = 43.3399835, Lokacija = "Braće Šarića 15, 88000 Mostar", Longitude = 17.8172949, Naziv = "Apartman Aida Mostar", Ocjena = 3.5, Parking = false, Perilica = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { ApartmanId = 4, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 2002, KategorijaApartmana = "B", KategorijaId = 4, Klima = false, Latitude = 43.3421271, Lokacija = "Rizikala 8, Mostar 88000", Longitude = 17.813691, Naziv = "Dream Apartments Mostar", Ocjena = 4.0, Parking = true, Perilica = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { ApartmanId = 5, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 2003, KategorijaApartmana = "C", KategorijaId = 4, Klima = false, Latitude = 43.3403544, Lokacija = "Braće Čišića 23, Mostar 88000", Longitude = 17.8167406, Naziv = "Apartman Aylin", Ocjena = 3.29, Parking = true, Perilica = false, PutanjaSlike = "", Tv = true, Wifi = true }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Atrakcije", b =>
                {
                    b.Property<int>("AtrakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AtrakcijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<string>("Opis")
                        .HasMaxLength(250);

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumn");

                    b.Property<double?>("Udaljenost");

                    b.Property<int?>("VrstaAtrakcijeId")
                        .HasColumnName("VrstaAtrakcijeID");

                    b.HasKey("AtrakcijaId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("VrstaAtrakcijeId");

                    b.ToTable("Atrakcije");

                    b.HasData(
                        new { AtrakcijaId = 1, KategorijaId = 2, Latitude = 43.337101, Lokacija = "Stari Most, Mostar 88000", Longitude = 17.81485, Naziv = "Old Bridge (Stari Most)", Ocjena = 5.0, Opis = "Over the Neretva river in the city of Mostar, Bosnia and Herzegovina, you will find the beautiful stone bridge Stari Most.", PutanjaSlike = "", VrstaAtrakcijeId = 2 },
                        new { AtrakcijaId = 2, KategorijaId = 2, Latitude = 43.3418210027799, Lokacija = "Osmana Džikića 41, Mostar 88000", Longitude = 17.816525157088339, Naziv = "Muslibegovic House", Ocjena = 3.4, Opis = "Forming part of a 17th-century heritage complex, this historic, rustic-chic hotel is a 1-minute walk from the Karagöz Bey Mosque and 8 minutes on foot from Stari Most, a restored 16th-century bridge.", PutanjaSlike = "", VrstaAtrakcijeId = 3 },
                        new { AtrakcijaId = 3, KategorijaId = 2, Latitude = 43.35029582798046, Lokacija = "Fortica,Mostar 88000", Longitude = 17.832039071950071, Naziv = "ZIPLine Fortica", Ocjena = 3.0, Opis = "Although not an official name, Fortica is a well-established name for a hill above Mostar through which leads the local road to Podveležje, and most probably originates from the Italian word fortezza = fort.", PutanjaSlike = "", VrstaAtrakcijeId = 4 },
                        new { AtrakcijaId = 4, KategorijaId = 2, Latitude = 43.257167860613059, Lokacija = "Blagaj", Longitude = 17.904669589166819, Naziv = "Vrelo Bune", Ocjena = 5.0, Opis = "Natural spring flowing from a cavern, forming picturesque falls near waterfront restaurants.", PutanjaSlike = "", VrstaAtrakcijeId = 1 },
                        new { AtrakcijaId = 5, KategorijaId = 2, Latitude = 43.339720130675644, Lokacija = "Mala Tepa 16, Mostar 80807", Longitude = 17.816927109510132, Naziv = "Koskin-Mehmed Pasha's Mosque", Ocjena = 5.0, Opis = "Small mosque dating to the 17th century, with striking views of the river & surrounding town.", PutanjaSlike = "", VrstaAtrakcijeId = 2 }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.DodatneOpcije", b =>
                {
                    b.Property<int>("DodatnaOpcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DodatnaOpcijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Bazen");

                    b.Property<bool?>("Parking");

                    b.Property<bool?>("Tv")
                        .HasColumnName("TV");

                    b.HasKey("DodatnaOpcijaId");

                    b.ToTable("DodatneOpcije");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");

                    b.HasData(
                        new { DrzavaId = 1, Naziv = "Bosna i Hercegovina", Oznaka = "BiH", PutanjaSlike = "" },
                        new { DrzavaId = 2, Naziv = "Hrvatska", Oznaka = "HR", PutanjaSlike = "" },
                        new { DrzavaId = 3, Naziv = "Srbija", Oznaka = "SR", PutanjaSlike = "" },
                        new { DrzavaId = 4, Naziv = "Slovenija", Oznaka = "SL", PutanjaSlike = "" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrzavaId")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");

                    b.HasData(
                        new { GradId = 1, DrzavaId = 1, Naziv = "Mostar" },
                        new { GradId = 2, DrzavaId = 1, Naziv = "Sarajevo" },
                        new { GradId = 3, DrzavaId = 1, Naziv = "Tuzla" },
                        new { GradId = 4, DrzavaId = 1, Naziv = "Zenica" },
                        new { GradId = 5, DrzavaId = 1, Naziv = "Konjic" },
                        new { GradId = 6, DrzavaId = 2, Naziv = "Zagred" },
                        new { GradId = 7, DrzavaId = 2, Naziv = "Karlovac" },
                        new { GradId = 8, DrzavaId = 2, Naziv = "Split" },
                        new { GradId = 9, DrzavaId = 2, Naziv = "Dubrovnik" },
                        new { GradId = 10, DrzavaId = 2, Naziv = "Osijek" },
                        new { GradId = 11, DrzavaId = 3, Naziv = "Beograd" },
                        new { GradId = 12, DrzavaId = 3, Naziv = "Novi sad" },
                        new { GradId = 13, DrzavaId = 3, Naziv = "Niš" },
                        new { GradId = 14, DrzavaId = 3, Naziv = "Kragujevac" },
                        new { GradId = 15, DrzavaId = 3, Naziv = "Subotica" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Hoteli", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HotelID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AparatZaKafu");

                    b.Property<bool?>("Bazen");

                    b.Property<int?>("GodinaIzgradnje");

                    b.Property<string>("Kategorija")
                        .HasMaxLength(1);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<bool?>("Klima");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<bool?>("Parking");

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumn");

                    b.Property<bool?>("Tv")
                        .HasColumnName("TV");

                    b.Property<double?>("Udaljenost");

                    b.Property<bool?>("Wifi");

                    b.HasKey("HotelId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Hoteli");

                    b.HasData(
                        new { HotelId = 1, AparatZaKafu = true, Bazen = true, GodinaIzgradnje = 2000, Kategorija = "A", KategorijaId = 4, Klima = true, Latitude = 43.3455656, Lokacija = "Kneza Domagoja, Mostar 88000", Longitude = 17.8057751, Naziv = "Hotel Mostar", Ocjena = 4.5, Parking = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { HotelId = 2, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 1999, Kategorija = "B", KategorijaId = 4, Klima = true, Latitude = 43.3503297, Lokacija = "Kneza Višeslava, Mostar 88000", Longitude = 17.804026, Naziv = "Hotel Mepas", Ocjena = 3.2, Parking = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { HotelId = 3, AparatZaKafu = true, Bazen = true, GodinaIzgradnje = 2001, Kategorija = "C", KategorijaId = 4, Klima = false, Latitude = 43.339569731156907, Lokacija = "Konak 18, 88000 Mostar", Longitude = 17.822071547070191, Naziv = "Hotel Eden", Ocjena = 3.5, Parking = false, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { HotelId = 4, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 2002, Kategorija = "B", KategorijaId = 4, Klima = false, Latitude = 43.344693051503221, Lokacija = "Mostarskog bataljona bb, 88000 Mostar", Longitude = 17.812161670884688, Naziv = "Hotel Bristol", Ocjena = 4.34, Parking = true, PutanjaSlike = "", Tv = true, Wifi = true },
                        new { HotelId = 5, AparatZaKafu = true, Bazen = false, GodinaIzgradnje = 2003, Kategorija = "B", KategorijaId = 4, Klima = false, Latitude = 43.33719935014247, Lokacija = "Onešćukova 32, 88000 Mostar", Longitude = 17.813126851831623, Naziv = "Hotel Emen", Ocjena = 3.29, Parking = true, PutanjaSlike = "", Tv = true, Wifi = true }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Jela", b =>
                {
                    b.Property<int>("JeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JeloID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaJelaId")
                        .HasColumnName("KategorijaJelaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<string>("PutanjaSlike");

                    b.Property<string>("Sastojci")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Slika");

                    b.HasKey("JeloId");

                    b.HasIndex("KategorijaJelaId");

                    b.ToTable("Jela");

                    b.HasData(
                        new { JeloId = 1, KategorijaJelaId = 1, Naziv = "Hamburger", PutanjaSlike = "", Sastojci = "..." },
                        new { JeloId = 2, KategorijaJelaId = 1, Naziv = "Pohovani fileti", PutanjaSlike = "", Sastojci = "..." },
                        new { JeloId = 3, KategorijaJelaId = 1, Naziv = "Ćevapi", PutanjaSlike = "", Sastojci = "..." }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Jelovnik", b =>
                {
                    b.Property<int>("JelovnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JelovnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojJela");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int?>("JeloId")
                        .HasColumnName("JeloID");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(100);

                    b.Property<int?>("RestoranId")
                        .HasColumnName("RestoranID");

                    b.HasKey("JelovnikId");

                    b.HasIndex("JeloId");

                    b.HasIndex("RestoranId");

                    b.ToTable("Jelovnik");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Kafici", b =>
                {
                    b.Property<int>("KaficId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KaficID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<double?>("Udaljenost");

                    b.HasKey("KaficId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Kafici");

                    b.HasData(
                        new { KaficId = 1, KategorijaId = 3, Latitude = 43.3586019, Lokacija = "Zalik 1, Mostar 88000", Longitude = 17.8145922, Naziv = "Spago pub", Ocjena = 5.0, PutanjaSlike = "" },
                        new { KaficId = 2, KategorijaId = 3, Latitude = 43.345981010588361, Lokacija = "Kralja Tvrtka 22, Mostar 88000", Longitude = 17.804500037023651, Naziv = "Black Pearl", Ocjena = 4.5, PutanjaSlike = "" },
                        new { KaficId = 3, KategorijaId = 3, Latitude = 43.343148574040683, Lokacija = "Braće Fejića 35, Mostar 88000", Longitude = 17.81306363263667, Naziv = "Cafe Bar IL MOORO", Ocjena = 4.362, PutanjaSlike = "" },
                        new { KaficId = 4, KategorijaId = 3, Latitude = 43.337564943914067, Lokacija = "Rade Bitange, Mostar 88000", Longitude = 17.814320673596402, Naziv = "Café de Alma", Ocjena = 4.4, PutanjaSlike = "" },
                        new { KaficId = 5, KategorijaId = 3, Latitude = 43.33554505503043, Lokacija = "Mostar 88000", Longitude = 17.817228391411266, Naziv = "Caffe Bar Fratello", Ocjena = 4.7, PutanjaSlike = "" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.KategorijaJela", b =>
                {
                    b.Property<int>("KategorijaJelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaJelaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(250);

                    b.HasKey("KategorijaJelaId");

                    b.ToTable("KategorijaJela");

                    b.HasData(
                        new { KategorijaJelaId = 1, Naziv = "Slatka jela" },
                        new { KategorijaJelaId = 2, Naziv = "Slana jela" },
                        new { KategorijaJelaId = 3, Naziv = "N/A" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Sadrzaj");

                    b.Property<int?>("Ukupno");

                    b.Property<string>("VrstaKategorije");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorije");

                    b.HasData(
                        new { KategorijaId = 1, Naziv = "Food", Opis = "", Sadrzaj = "Restorani", Ukupno = 0, VrstaKategorije = "Default" },
                        new { KategorijaId = 2, Naziv = "Atractions", Opis = "", Sadrzaj = "Atrakcije", Ukupno = 0, VrstaKategorije = "Default" },
                        new { KategorijaId = 3, Naziv = "Coffee shops", Opis = "", Sadrzaj = "Kafici", Ukupno = 0, VrstaKategorije = "Default" },
                        new { KategorijaId = 4, Naziv = "Accommodation", Opis = "", Sadrzaj = "Apartmani, Hoteli", Ukupno = 0, VrstaKategorije = "Default" },
                        new { KategorijaId = 5, Naziv = "Transport", Opis = "", Sadrzaj = "Prevoz", Ukupno = 0, VrstaKategorije = "Default" },
                        new { KategorijaId = 6, Naziv = "Others", Opis = "Not yet defined", Sadrzaj = "", Ukupno = 0, VrstaKategorije = "Default" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojPrijavljivanja");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new { KorisnikId = 1, BrojPrijavljivanja = 0, Email = "desktop@edu.fit.ba", GradId = 1, Ime = "desktop", KorisnickoIme = "testing2", LozinkaHash = "25BXwlT+alXTy1YgGuVNeFJx7vE=", LozinkaSalt = "nfB0WOkoOSuHIlkbdGETHQ==", Prezime = "desktop", PutanjaSlike = "", Telefon = "036598745" },
                        new { KorisnikId = 2, BrojPrijavljivanja = 0, Email = "mobile@edu.fit.ba", GradId = 2, Ime = "mobile", KorisnickoIme = "mobile", LozinkaHash = "QMQxyTHTDQPbB99C327FoldOy1g=", LozinkaSalt = "Nr1JgKhL6v1dQtHGc+ytkw==", Prezime = "mobile", PutanjaSlike = "", Telefon = "036593745" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnickaUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnickaUlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("UlogaId")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnickaUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");

                    b.HasData(
                        new { KorisnickaUlogaId = 1, KorisnikId = 1, UlogaId = 1 },
                        new { KorisnickaUlogaId = 2, KorisnikId = 1, UlogaId = 2 },
                        new { KorisnickaUlogaId = 3, KorisnikId = 2, UlogaId = 2 }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.KorisnikKategorija", b =>
                {
                    b.Property<int>("KorisnikKategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikKategorijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.HasKey("KorisnikKategorijaId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikKategorija");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Markeri", b =>
                {
                    b.Property<int>("MarkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MarkerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<double>("Lat")
                        .HasColumnName("lat");

                    b.Property<double>("Lng")
                        .HasColumnName("lng");

                    b.Property<string>("Opis")
                        .HasMaxLength(30);

                    b.HasKey("MarkerId");

                    b.HasIndex("GradId");

                    b.ToTable("Markeri");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.MojiFavoriti", b =>
                {
                    b.Property<int>("FavoritiId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naziv");

                    b.Property<int?>("ObjekatId")
                        .HasColumnName("ObjekatID");

                    b.Property<string>("Vrsta");

                    b.HasKey("FavoritiId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("MojiFavoriti");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Nightclubs", b =>
                {
                    b.Property<int>("NightClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NightClubID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<double?>("Udaljenost");

                    b.HasKey("NightClubId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Nightclubs");

                    b.HasData(
                        new { NightClubId = 1, KategorijaId = 6, Latitude = 43.3454941, Lokacija = "Midhad Hujdur Hujka sportska dvorana", Longitude = 17.8058701, Naziv = "Art", Ocjena = 3.0 },
                        new { NightClubId = 2, KategorijaId = 6, Latitude = 43.3418, Lokacija = "Kralja Petra Krešimira IV, Mostar 88000", Longitude = 17.8017, Naziv = "Drugi način", Ocjena = 3.0 }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Objava", b =>
                {
                    b.Property<int>("ObjavaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasMaxLength(40);

                    b.Property<string>("AutorModifikacije")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumModificiranja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50);

                    b.Property<string>("PutanjaSlike");

                    b.Property<string>("Sadrzaj")
                        .HasMaxLength(250);

                    b.Property<byte[]>("Slika")
                        .HasMaxLength(1);

                    b.HasKey("ObjavaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Objava");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Poruke", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PorukaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<string>("Posiljalac")
                        .HasMaxLength(50);

                    b.Property<int?>("PosiljalacId")
                        .HasColumnName("PosiljalacID");

                    b.Property<string>("Primalac")
                        .HasMaxLength(50);

                    b.Property<int?>("PrimalacId")
                        .HasColumnName("PrimalacID");

                    b.Property<string>("Sadrzaj");

                    b.HasKey("PorukaId");

                    b.HasIndex("PosiljalacId");

                    b.HasIndex("PrimalacId");

                    b.ToTable("Poruke");

                    b.HasData(
                        new { PorukaId = 1, Posiljalac = "desktop desktop", PosiljalacId = 1, Primalac = "desktop desktop", PrimalacId = 1, Sadrzaj = "Welcome to explore Mostar!" },
                        new { PorukaId = 2, Posiljalac = "desktop desktop", PosiljalacId = 1, Primalac = "mobile mobile", PrimalacId = 2, Sadrzaj = "Hello and welcome to our app" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Prevoz", b =>
                {
                    b.Property<int>("PrevozId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrevozID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("PrevozId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Prevoz");

                    b.HasData(
                        new { PrevozId = 1, KategorijaId = 5, Naziv = "Arny", PutanjaSlike = "", Telefon = "1507", Vrsta = "Taxi" },
                        new { PrevozId = 2, KategorijaId = 5, Naziv = "Herc", PutanjaSlike = "", Telefon = "1599", Vrsta = "Taxi" },
                        new { PrevozId = 3, KategorijaId = 5, Naziv = "Moj Taxi", PutanjaSlike = "", Telefon = "1503", Vrsta = "Taxi" },
                        new { PrevozId = 4, KategorijaId = 5, Naziv = "Green Taxi", PutanjaSlike = "", Telefon = "1500", Vrsta = "Taxi" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Recenzije", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RecenzijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<string>("ImePrezime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Objekat");

                    b.Property<int?>("Ocjena");

                    b.Property<string>("Sadrzaj");

                    b.Property<string>("Vrsta");

                    b.HasKey("RecenzijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Recenzije");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Restorani", b =>
                {
                    b.Property<int>("RestoranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RestoranID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GodinaIzgradnje");

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<double?>("Latitude");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<double?>("Longitude");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double?>("Ocjena");

                    b.Property<string>("PutanjaSlike");

                    b.Property<byte[]>("Slika");

                    b.Property<double?>("Udaljenost");

                    b.Property<int>("VrstaId")
                        .HasColumnName("VrstaID");

                    b.HasKey("RestoranId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Restorani");

                    b.HasData(
                        new { RestoranId = 1, GodinaIzgradnje = 2000, KategorijaId = 1, Latitude = 43.3553315, Lokacija = "Muje Pašica bb, Mostar 88000", Longitude = 17.8133241, Naziv = "Megamarkt", Ocjena = 5.0, PutanjaSlike = "", VrstaId = 1 },
                        new { RestoranId = 2, GodinaIzgradnje = 1999, KategorijaId = 1, Latitude = 43.3501688, Lokacija = "Kralja Tomislava 29, Mostar 88000", Longitude = 17.8007839, Naziv = "Megi", Ocjena = 4.5, PutanjaSlike = "", VrstaId = 1 },
                        new { RestoranId = 3, GodinaIzgradnje = 1998, KategorijaId = 1, Latitude = 43.350002, Lokacija = "Vukovarska, Mostar 88000", Longitude = 17.7975807, Naziv = "TABOO Restaurant", Ocjena = 4.362, PutanjaSlike = "", VrstaId = 2 },
                        new { RestoranId = 4, GodinaIzgradnje = 2001, KategorijaId = 1, Latitude = 43.338915, Lokacija = "Mala Tepa bb, Mostar 88000", Longitude = 17.8151488, Naziv = "Urban Grill", Ocjena = 3.4, PutanjaSlike = "", VrstaId = 1 },
                        new { RestoranId = 5, GodinaIzgradnje = 2002, KategorijaId = 1, Latitude = 43.3402981, Lokacija = "Kraljice Katarine 11a, Mostar 88000", Longitude = 17.8027823, Naziv = "Restoran Radobolja", Ocjena = 4.7, PutanjaSlike = "", VrstaId = 1 }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.SearchTrack", b =>
                {
                    b.Property<int>("SearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SearchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumPretrage")
                        .HasColumnType("datetime");

                    b.Property<string>("ImePrezime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Sadrzaj");

                    b.HasKey("SearchId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("SearchTrack");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(25);

                    b.Property<string>("Opis")
                        .HasMaxLength(100);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");

                    b.HasData(
                        new { UlogaId = 1, Naziv = "Administrator", Opis = "" },
                        new { UlogaId = 2, Naziv = "Korisnik", Opis = "" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.UserActivity", b =>
                {
                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("AdminId")
                        .HasColumnName("AdminID");

                    b.Property<int?>("BrojApartmanaFavoriti");

                    b.Property<int?>("BrojAtrakcijaFavoriti");

                    b.Property<int?>("BrojHotelaFavoriti");

                    b.Property<int?>("BrojKaficaFavoriti");

                    b.Property<int?>("BrojNeuspjesnihPrijavljivanja");

                    b.Property<int?>("BrojNocnihKlubovaFavoriti");

                    b.Property<int?>("BrojPrijavljivanja");

                    b.Property<int?>("BrojRestoranaFavoriti");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsApartman")
                        .HasColumnName("isApartman");

                    b.Property<bool?>("IsAtrakcija")
                        .HasColumnName("isAtrakcija");

                    b.Property<bool?>("IsHotel")
                        .HasColumnName("isHotel");

                    b.Property<bool?>("IsKafic")
                        .HasColumnName("isKafic");

                    b.Property<bool?>("IsNightClub")
                        .HasColumnName("isNightClub");

                    b.Property<bool?>("IsRestoran")
                        .HasColumnName("isRestoran");

                    b.Property<string>("ListaOdabranihStavki");

                    b.Property<bool?>("Onemogucen");

                    b.Property<string>("Razlog");

                    b.HasKey("KorisnikId");

                    b.ToTable("UserActivity");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.VrstaAtrakcija", b =>
                {
                    b.Property<int>("VrstaAtrakcijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VrstaAtrakcijeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("VrstaAtrakcijeId");

                    b.ToTable("VrstaAtrakcija");

                    b.HasData(
                        new { VrstaAtrakcijeId = 1, Naziv = "Prirodne" },
                        new { VrstaAtrakcijeId = 2, Naziv = "Historijske" },
                        new { VrstaAtrakcijeId = 3, Naziv = "Religijske" },
                        new { VrstaAtrakcijeId = 4, Naziv = "Adrenalinske" },
                        new { VrstaAtrakcijeId = 5, Naziv = "N/A" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.VrstaRestorana", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VrstaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50);

                    b.HasKey("VrstaId");

                    b.ToTable("VrstaRestorana");

                    b.HasData(
                        new { VrstaId = 1, Naziv = "Restoran" },
                        new { VrstaId = 2, Naziv = "Fast Food" },
                        new { VrstaId = 3, Naziv = "N/A" }
                    );
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Apartmani", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Apartmani")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Apartmani__Kateg__160F4887");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Atrakcije", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Atrakcije")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Atrakcije__Kateg__17036CC0");

                    b.HasOne("exploreMostar.WebAPI.Database.VrstaAtrakcija", "VrstaAtrakcije")
                        .WithMany("Atrakcije")
                        .HasForeignKey("VrstaAtrakcijeId")
                        .HasConstraintName("FK__Atrakcije__Vrsta__151B244E");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK__Gradovi__DrzavaI__6C190EBB");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Hoteli", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "KategorijaNavigation")
                        .WithMany("Hoteli")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Hoteli__Kategori__17F790F9");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Jela", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.KategorijaJela", "KategorijaJela")
                        .WithMany("Jela")
                        .HasForeignKey("KategorijaJelaId")
                        .HasConstraintName("FK__Jela__Kategorija__5224328E");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Jelovnik", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Jela", "Jelo")
                        .WithMany("Jelovnik")
                        .HasForeignKey("JeloId")
                        .HasConstraintName("FK__Jelovnik__JeloID__607251E5");

                    b.HasOne("exploreMostar.WebAPI.Database.Restorani", "Restoran")
                        .WithMany("Jelovnik")
                        .HasForeignKey("RestoranId")
                        .HasConstraintName("FK__Jelovnik__Restor__6166761E");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Kafici", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Kafici")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Kafici__Kategori__18EBB532");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Korisnici")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Korisnici__GradI__03F0984C");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Korisnici__Koris__662B2B3B");

                    b.HasOne("exploreMostar.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__Korisnici__Uloga__671F4F74");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.KorisnikKategorija", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("KorisnikKategorija")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__KorisnikK__Kateg__5441852A");

                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisnikKategorija")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikK__Koris__534D60F1");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Markeri", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Markeri")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Markeri__GradID__08B54D69");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.MojiFavoriti", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("MojiFavoriti")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__MojiFavor__Koris__2EA5EC27");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Nightclubs", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Nightclubs")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Nightclub__Kateg__19DFD96B");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Objava", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Objava")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Objava__Korisnik__73852659");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Poruke", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "PosiljalacNavigation")
                        .WithMany("PorukePosiljalacNavigation")
                        .HasForeignKey("PosiljalacId")
                        .HasConstraintName("FK__Poruke__Posiljal__0880433F");

                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "PrimalacNavigation")
                        .WithMany("PorukePrimalacNavigation")
                        .HasForeignKey("PrimalacId")
                        .HasConstraintName("FK__Poruke__Primalac__09746778");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Prevoz", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Prevoz")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Prevoz__Kategori__5EBF139D");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Recenzije", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Recenzije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Recenzije__Koris__1B9317B3");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.Restorani", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Restorani")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Restorani__Kateg__1AD3FDA4");

                    b.HasOne("exploreMostar.WebAPI.Database.VrstaRestorana", "Vrsta")
                        .WithMany("Restorani")
                        .HasForeignKey("VrstaId")
                        .HasConstraintName("FK__Restorani__Vrsta__1DB06A4F");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.SearchTrack", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("SearchTrack")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__SearchTra__Koris__54CB950F");
                });

            modelBuilder.Entity("exploreMostar.WebAPI.Database.UserActivity", b =>
                {
                    b.HasOne("exploreMostar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithOne("UserActivity")
                        .HasForeignKey("exploreMostar.WebAPI.Database.UserActivity", "KorisnikId")
                        .HasConstraintName("FK__UserActiv__Koris__43A1090D");
                });
#pragma warning restore 612, 618
        }
    }
}
